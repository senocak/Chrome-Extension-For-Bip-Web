import React, { useEffect, useState } from "react"
import { createRoot } from "react-dom/client"
//import "./popup.css"
import "./config.ts"
import { useTranslation } from "react-i18next"

const Popup: () => React.JSX.Element = (): React.JSX.Element => {
    const [count, setCount] = useState<number>(0)
    const [currentTab, setCurrentTab] = useState<chrome.tabs.Tab |null>(null)
    const { t } = useTranslation()

    useEffect((): void => {
        chrome.action.setBadgeText({ text: count.toString() })
    }, [count])
    useEffect((): void => {
        chrome.tabs.query({ active: true, currentWindow: true }, function (tabs: chrome.tabs.Tab[]): void {
            setCurrentTab(tabs[0])
        })
    }, [])

    const insertCSS = (styleId: string, tabId: number): void => {
        console.log("started insertCSS")
        chrome.scripting.insertCSS({
            target: { tabId },
            files: [`css/${styleId}.css`],
        }, (): void => {
            if (chrome.runtime.lastError) {
                console.error("Error injecting CSS:", chrome.runtime.lastError)
            } else {
                console.log(`CSS for ${styleId} injected successfully.`)
            }
        })
    }
    const insertCSSDirectly = (styleId: string, cssRules: string): void => {
        console.log("Started insertCSSDirectly")
        const existingStyle = document.getElementById(styleId)
        if (existingStyle) {
            console.log(`Style with ID "${styleId}" already exists.`)
            return;
        }
        const styleElement = document.createElement("style")
        styleElement.id = styleId
        styleElement.innerHTML = cssRules
        document.head.appendChild(styleElement)
        console.log(`CSS with ID "${styleId}" inserted successfully.`)
    }
    const removeCSSDirectly = (styleId: string): void => {
        console.log("Started removeCSSDirectly")
        const styleElement = document.getElementById(styleId)
        if (styleElement) {
            styleElement.parentNode?.removeChild(styleElement)
            console.log(`CSS with ID "${styleId}" removed successfully.`)
        } else {
            console.log(`No CSS found with ID "${styleId}" to remove.`)
        }
    }
    // toggleMessages
    const [toggleMessages, setToggleMessages] = useState(false)
    const [toggleMessagesBlur, setToggleMessagesBlur] = useState<number>(3)
    const messagesCSS = `
    .iLJwG3GpOhsneBQmWe33ww==, #iLJwG3GpOhsneBQmWe33ww==, span.iLJwG3GpOhsneBQmWe33ww\\=\\= {
        filter: blur(${toggleMessagesBlur}px) grayscale(1) !important;
    }

    ._2AOIt div:first-child, ._3cupO, ._1BOF7 ._1sykI, div._amk4 > ._amk6, div._amk4 ._am2s, span._amk7 {
        filter: blur(${toggleMessagesBlur}px) grayscale(1);
        transition-delay: 0s;
    }
    ._2AOIt {
        padding-right: 40px !important;
        padding-top: 12px !important;
        padding-bottom: 12px !important;
    }
    ._1qNn2 ._1nCcB {
        filter: blur(20px) grayscale(1);
        transition-delay: 0s;
    }
     ._2AOIt:hover div:first-child, ._3cupO:hover, ._1qNn2 ._1nCcB:hover, ._1BOF7 ._1sykI:hover, div._amk4 > ._amk6:hover, div._amk4 ._am2s:hover, span._amk7:hover {
        filter: blur(0) grayscale(0);
        transition-delay: 0.3s;
    }
    ._1qNn2 ._1nCcB, div._amk4 ._am2s {
        background-color: var(--incoming-background) !important;
        border-radius: 7.5px !important;
        box-shadow: 0 1px 0.5px rgba(0, 0, 0, 0.13) !important;
    }
    `;
    const _toggleMessages = (cssRules: string): void => {
        setToggleMessages(!toggleMessages)
        chrome.tabs.query({active: true, currentWindow: true}, function (tabs: chrome.tabs.Tab[]): void {
            const tab: chrome.tabs.Tab = tabs[0]
            const tabId: number = tabs[0].id!
            console.log("tab:" + JSON.stringify(tab))
            if (!toggleMessages) {
                chrome.scripting.executeScript({
                    target: { tabId },
                    func: insertCSSDirectly,
                    args: ["toggleMessages", cssRules]
                })
                setCount(count + 1)
            } else {
                chrome.scripting.executeScript({
                    target: { tabId },
                    func: removeCSSDirectly,
                    args: ["toggleMessages"]
                })
                setCount(count - 1)
            }
        })
    }
    // toggleMessagesPreview
    const [toggleMessagesPreview, setToggleMessagesPreview] = useState(false)
    const [toggleMessagesPreviewBlur, setToggleMessagesPreviewBlur] = useState<number>(3)
    const messagesPreviewCSS = `
    .vQ0w7, div._ak8k {
      filter: blur(${toggleMessagesPreviewBlur}px) grayscale(1);
      transition-delay: 0s;
    }
    .vQ0w7:hover, div._ak8k:hover{
      filter: blur(0) grayscale(0);
      transition-delay: 0.3s;
    }
    `;
    const _toggleMessagesPreview = (cssRules: string): void => {
        setToggleMessagesPreview(!toggleMessagesPreview)
        chrome.tabs.query({active: true, currentWindow: true}, function (tabs: chrome.tabs.Tab[]): void {
            const tab: chrome.tabs.Tab = tabs[0]
            const tabId: number = tabs[0].id!
            console.log("tab:" + JSON.stringify(tab))
            if (!toggleMessagesPreview) {
                chrome.scripting.executeScript({
                    target: { tabId },
                    func: insertCSSDirectly,
                    args: ["toggleMessagesPreview", cssRules]
                })
                setCount(count + 1)
            } else {
                chrome.scripting.executeScript({
                    target: { tabId },
                    func: removeCSSDirectly,
                    args: ["toggleMessagesPreview"]
                })
                setCount(count - 1)
            }
        })
    }
    // toggleMediaPreview
    const [toggleMediaPreview, setToggleMediaPreview] = useState(false)
    const [toggleMediaPreviewBlur, setToggleMediaPreviewBlur] = useState<number>(3)
    const mediaPreviewCSS = `
    ._2AOIt div.ktbp76dp div[role="button"] img,
    ._2AOIt div.eu4mztcy div[role="button"] img,
    ._2AOIt div.ktbp76dp > div[role="button"],
    ._2AOIt div.eu4mztcy > div[role="button"],
    ._2AOIt .cm280p3y > div[role="button"] > div.g0rxnol2.fe3aadhc.g0rxnol2.ln8gz9je,
    ._2AOIt .cm280p3y > div[role="button"] > div > div > div:not(:last-child),
    ._2AOIt .M6sU5,
    ._1BOF7 ._3cupO > div:not(.LldYr),
    ._3V9pc,
    .kknmh,
    ._2MmTH,
    .ZRhsD._2foMf,
    .Efdtr,
    .djhxrpsl,
    ._3dPH0,
    .b021xdil,

    div._amk4 > ._amk6 :is(div, button)[role="button"]:not(.x13yyeie, ._ak3u, [data-js-context-icon], .x1a06ls3),
    div._ak4o,
    div._ahy5 > div,
    div._ak15 > ._ahwq,
    span._ajxd._ajxk > ._ajxj._ajxd,
    div.xz9dduz > div:first-child,
    div._ajwt > div:first-child > div:nth-child(2) > div,
    div._ak3i,
    div._ajwt .xm0mufa > div
    {
      filter: blur(${toggleMediaPreviewBlur}px) grayscale(1);
      transition: initial;
      transition-delay: 0s;
    }

    ._2AOIt div.ktbp76dp div[role="button"]:hover img,
    ._2AOIt div.eu4mztcy div[role="button"]:hover img,
    ._2AOIt div.ktbp76dp > div[role="button"]:hover,
    ._2AOIt div.eu4mztcy > div[role="button"]:hover,
    ._2AOIt .cm280p3y > div[role="button"] > div.g0rxnol2.fe3aadhc.g0rxnol2.ln8gz9je:hover,
    ._2AOIt .cm280p3y > div[role="button"] > div > div > div:not(:last-child):hover,
    ._2AOIt .M6sU5:hover,
    ._1BOF7 ._3cupO > div:not(.LldYr):hover,
    ._3V9pc:hover,
    .kknmh:hover,
    ._2MmTH:hover,
    .ZRhsD._2foMf:hover,
    .Efdtr:hover,
    .djhxrpsl:hover,
    ._3dPH0:hover,
    .b021xdil:hover,

    div._amk4 > ._amk6 :is(div, button)[role="button"]:not(.x13yyeie, ._ak3u, [data-js-context-icon], .x1a06ls3):hover,
    div._ak4o:hover,
    div._ahy5 > div:hover,
    div._ak15 > ._ahwq:hover,
    span._ajxd._ajxk > ._ajxj._ajxd:hover,
    div.xz9dduz > div:first-child:hover,
    div._ajwt > div:first-child > div:nth-child(2) > div:hover,
    div._ak3i:hover,
    div._ajwt .xm0mufa > div:hover
    {
      filter: blur(0) grayscale(0);
      transition-delay: 0.3s;
    }

    ._1qNn2 ._1nCcB,
    span._ajxd._ajxk > ._ajxj._ajxd
    {
      background-color: var(--incoming-background) !important;
      border-radius: 7.5px !important;
      box-shadow: 0 1px 0.5px rgba(0, 0, 0, 0.13) !important;
    }
    `;
    const _toggleMediaPreview = (cssRules: string): void => {
        setToggleMediaPreview(!toggleMediaPreview)
        chrome.tabs.query({active: true, currentWindow: true}, function (tabs: chrome.tabs.Tab[]): void {
            const tab: chrome.tabs.Tab = tabs[0]
            const tabId: number = tabs[0].id!
            console.log("tab:" + JSON.stringify(tab))
            if (!toggleMediaPreview) {
                chrome.scripting.executeScript({
                    target: { tabId },
                    func: insertCSSDirectly,
                    args: ["toggleMediaPreview", cssRules]
                })
                setCount(count + 1)
            } else {
                chrome.scripting.executeScript({
                    target: { tabId },
                    func: removeCSSDirectly,
                    args: ["toggleMediaPreview"]
                })
                setCount(count - 1)
            }
        })
    }
    // toggleMediaGalleryDescription
    const [toggleMediaGalleryDescription, setToggleMediaGalleryDescription] = useState(false)
    const [toggleMediaGalleryDescriptionBlur, setToggleMediaGalleryDescriptionBlur] = useState<number>(3)
    const mediaGalleryDescriptionCSS = `
    .tukmaf4q /*media preview in gallery*/,
    ._1Pr6q /*media preview in send media*/,

    /* updated wa version (v2.3000.xx) */
    div._ajuf._ajuh._ajug > div /* media in overlay view */,
    div.x1conndi /* media thumb in overlay view and details panel */,
    div.x4t2iug /* media thumb in media gallery panel */
    {
      filter: blur(${toggleMediaGalleryDescriptionBlur}px) grayscale(1);
      transition-delay: 0s;
    }

    /* former wa version (v2.2412.xx) */
    .tukmaf4q:hover /*media preview in gallery*/,
    ._1Pr6q:hover /*media preview in send media*/,

    /* updated wa version (v2.3000.xx) */
    div._ajuf._ajuh._ajug > div:hover /* media in overlay view */,
    div.x1conndi:hover /* media thumb in overlay view and details panel */,
    div.x4t2iug:hover /* media thumb in media gallery panel */
    {
      filter: blur(0) grayscale(0);
      transition-delay: 0.3s;
    }

    /* updated wa version (v2.3000.xx) */
    /* prevent cropped blur */
    div[role="dialog"] > .x10wlt62 /* media thumb in details panel */
    {
      overflow: visible;
    }
    `;
    const _toggleMediaGalleryDescription = (cssRules: string): void => {
        setToggleMediaGalleryDescription(!toggleMediaGalleryDescription)
        chrome.tabs.query({active: true, currentWindow: true}, function (tabs: chrome.tabs.Tab[]): void {
            const tab: chrome.tabs.Tab = tabs[0]
            const tabId: number = tabs[0].id!
            console.log("tab:" + JSON.stringify(tab))
            if (!toggleMediaGalleryDescription) {
                chrome.scripting.executeScript({
                    target: { tabId },
                    func: insertCSSDirectly,
                    args: ["toggleMediaGalleryDescription", cssRules]
                })
                setCount(count + 1)
            } else {
                chrome.scripting.executeScript({
                    target: { tabId },
                    func: removeCSSDirectly,
                    args: ["toggleMediaGalleryDescription"]
                })
                setCount(count - 1)
            }
        })
    }
    // toggleTextInputDescription
    const [toggleTextInputDescription, setToggleTextInputDescription] = useState(false)
    const textInputDescriptionCSS = `
    p.selectable-text.copyable-text.x15bjb6t.x1n2onr6 {
      filter: blur(8px) opacity(0.25);
    }
    `;
    const _toggleTextInputDescription = (cssRules: string): void => {
        setToggleTextInputDescription(!toggleTextInputDescription)
        chrome.tabs.query({active: true, currentWindow: true}, function (tabs: chrome.tabs.Tab[]): void {
            const tab: chrome.tabs.Tab = tabs[0]
            const tabId: number = tabs[0].id!
            console.log("tab:" + JSON.stringify(tab))
            if (!toggleTextInputDescription) {
                chrome.scripting.executeScript({
                    target: { tabId },
                    func: insertCSSDirectly,
                    args: ["toggleTextInputDescription", cssRules]
                })
                setCount(count + 1)
            } else {
                chrome.scripting.executeScript({
                    target: { tabId },
                    func: removeCSSDirectly,
                    args: ["toggleTextInputDescription"]
                })
                setCount(count - 1)
            }
        })
    }
    // toggleMediaGalleryDescription
    const [toggleProfilePicDescription, setToggleProfilePicDescription] = useState(false)
    const [toggleProfilePicDescriptionSmallBlur, setToggleProfilePicDescriptionSmallBlur] = useState<number>(3)
    const [toggleProfilePicDescriptionNormalBlur, setToggleProfilePicDescriptionNormalBlur] = useState<number>(3)
    const [toggleProfilePicDescriptionLargeBlur, setToggleProfilePicDescriptionLargeBlur] = useState<number>(3)
    const profilePicDescriptionCSS = `
    /* former wa version (v2.2412.xx) */
    [role="row"] > div > ._1AHcd ._13jwn /*profile pic message list*/,
    [role="button"] > div > ._1AHcd ._13jwn /*profile pic non message list*/,
    ._2pr2H /*message view profile pic*/,
    ._3WByx /*self profile pic*/,
    .stnyektq /*group chat msg profile pic*/,
    ._3oha0._2xaO4 /* voice message profile pic */,
    ._3dPH0 /* contacts attachment */,
    .b021xdil /* multi contacts attachment */,

    /* updated wa version (v2.3000.xx) */
    div[role="listitem"] ._ak8h /* user/group profile pic in message list */,
    div[role="button"][class=""] ._ak8h /* user/group profile pic in details list and popup list */,
    div[role="dialog"] ._ak8h /* user/group profile pic in details list and popup list */,
    header._amid div[role="button"]:first-child > div /* user/group profile pic at the top of chat panel */,
    div._amk4 > div[role="button"] /* user profile pic in group chat messages */,
    div._ahz2 /* user profile pic in contact attachment */,
    div.x2lah0s.x1c4vz4f.xdl72j9.x194xeti /* user profile pic in multiple contact attachment */,
    div._ak4m /* user profile pic in voice note chat */,
    div.overlay ._ak8h /* user profile pic in overlay media view */
    {
      filter: blur(${toggleProfilePicDescriptionNormalBlur}px) grayscale(1);
      transition-delay: 0s;
    }
    /* former wa version (v2.2412.xx) */
    .pz0xruzv /*Details direct profile pic*/,
    .njub1g37 ._3xH7K /*Details group profile pic*/,

    /* updated wa version (v2.3000.xx) */
    div.x78zum5.xl56j7k.x1fqp7bg > div[role="button"] /* user profile pic in details panel */,
    div[role="button"][class="x1n2onr6 x14yjl9h xudhj91 x18nykt9 xww2gxu"] /* business profile pic in details panel */,
    div.x10l6tqk.x13vifvy.x17qophe.xh8yej3.xiqx3za.x6ikm8r.x10wlt62.x1knukwh.xihgre1 /* business profile banner in details panel */,
    div.x15e7hw7 /* business profile banner in catalog list */,
    div._amje /* group profile pic in details panel */,
    div.overlay ._am0k /* user/group profile pic overlay view */
    {
      filter: blur(${toggleProfilePicDescriptionLargeBlur}px) grayscale(1);
      transition-delay: 0s;
    }
    /* former wa version (v2.2412.xx) */
    .njub1g37 .kk3akd72.claouzo6 /*Starred message profile pic*/,

    /* updated wa version (v2.3000.xx) */
    div.x1okw0bk.x1w0mnb /* user profile pic in starred message list */
    {
      filter: blur(${toggleProfilePicDescriptionSmallBlur}px) grayscale(1);
      transition-delay: 0s;
    }

    /* former wa version (v2.2412.xx) */
    [role="row"] > div > ._1AHcd ._13jwn:hover /*profile pic message list*/,
    [role="button"] > div > ._1AHcd ._13jwn:hover /*profile pic non message list*/,
    ._2pr2H:hover /*message view profile pic*/,
    ._3WByx:hover /*self profile pic*/,
    .stnyektq:hover /*group chat msg profile pic*/,
    ._3oha0._2xaO4:hover /* voice message profile pic */,
    ._3dPH0:hover /* contacts attachment */,
    .b021xdil:hover /* multi contacts attachment */,
    .pz0xruzv:hover /*Details direct profile pic*/,
    .njub1g37 ._3xH7K:hover /*Details group profile pic*/,
    .njub1g37 .kk3akd72.claouzo6:hover /*Starred message profile pic*/,

    /* updated wa version (v2.3000.xx) */
    div[role="listitem"] ._ak8h:hover /* user/group profile pic in message list */,
    div[role="button"][class=""] ._ak8h:hover /* user/group profile pic in details list and popup list */,
    div[role="dialog"] ._ak8h:hover /* user/group profile pic in details list and popup list */,
    header._amid div[role="button"]:first-child > div:hover /* user/group profile pic at the top of chat panel */,
    div._amk4 > div[role="button"]:hover /* user profile pic in group chat messages */,
    div._ahz2:hover /* user profile pic in contact attachment */,
    div.x2lah0s.x1c4vz4f.xdl72j9.x194xeti:hover /* user profile pic in multiple contact attachment */,
    div._ak4m:hover /* user profile pic in voice note chat */,
    div.overlay ._ak8h:hover /* user profile pic in overlay media view */,
    div.x78zum5.xl56j7k.x1fqp7bg > div[role="button"]:hover /* user profile pic in details panel */,
    div[role="button"][class="x1n2onr6 x14yjl9h xudhj91 x18nykt9 xww2gxu"]:hover /* business profile pic in details panel */,
    div.x10l6tqk.x13vifvy.x17qophe.xh8yej3.xiqx3za.x6ikm8r.x10wlt62.x1knukwh.xihgre1:hover /* business profile banner in details panel */,
    div.x15e7hw7:hover /* business profile banner in catalog list */,
    div._amje:hover /* group profile pic in details panel */,
    div.overlay ._am0k:hover /* user/group profile pic overlay view */,
    div.x1okw0bk.x1w0mnb:hover /* user profile pic in starred message list */
    {
      filter: blur(0) grayscale(0);
      transition-delay: 0.3s;
    }


    /* updated wa version (v2.3000.xx) */
    /* prevent cropped blur */
    div._ak1d > div:first-child > div:first-child /* user profile pic in starred message list */
    {
      overflow: visible;
    }
    `;
    const _toggleProfilePicDescription = (cssRules: string): void => {
        setToggleProfilePicDescription(!toggleProfilePicDescription)
        chrome.tabs.query({active: true, currentWindow: true}, function (tabs: chrome.tabs.Tab[]): void {
            const tab: chrome.tabs.Tab = tabs[0]
            const tabId: number = tabs[0].id!
            console.log("tab:" + JSON.stringify(tab))
            if (!toggleProfilePicDescription) {
                chrome.scripting.executeScript({
                    target: { tabId },
                    func: insertCSSDirectly,
                    args: ["toggleProfilePicDescription", cssRules]
                })
                setCount(count + 1)
            } else {
                chrome.scripting.executeScript({
                    target: { tabId },
                    func: removeCSSDirectly,
                    args: ["toggleProfilePicDescription"]
                })
                setCount(count - 1)
            }
        })
    }
    // toggleNameDescription
    const [toggleNameDescription, setToggleNameDescription] = useState(false)
    const [toggleNameDescriptionBlur, setToggleNameDescriptionBlur] = useState<number>(3)
    const nameDescriptionCSS = `
    /* former wa version (v2.2412.xx) */
    div:not([role]) > div:not([role]) > ._8nE1Y ._21S-L /*user/group name in search message*/,
    div[role="row"] > div > ._8nE1Y ._21S-L /*user/group name in message list*/,
    div[role="button"] > div > ._8nE1Y ._21S-L /*user/group name in non message list*/,
    ._3W2ap /*Top user/group name*/,
    ._2au8k div:nth-child(2) /*Top group user preview*/,
    ._2HCBh ._1N-sl ._1mDG- /*Details groupname*/,
    .q9lllk4z /*Details username */,
    .qfejxiq4 .Mk0Bp._30scZ /*Details username business*/,
    .njub1g37 span._11JPr /*Starred messages user/group name*/,
    .a4ywakfo.qt60bha0 /*About user phone number*/,
    ._3IzYj /*Message in chat*/,
    .Efdtr /* name in contact attachment */,
    .djhxrpsl /* name in multi contact attachment */,

    /* updated wa version (v2.3000.xx) */
    div[role="listitem"] ._ak8q /* user/group name in message list */,
    div[role="button"][class=""] ._ak8q /* user/group name in details list and popup list */,
    div[role="dialog"] ._ak8q /* user name in contact popup list */,
    div[role="dialog"] div.copyable-text /* phone number and business user name in contact popup list */,
    div[role="listitem"] ._am_2 /* community name */,
    div[role="button"]._amie > div:nth-child(1) /* user/group name at the top of chat panel */,
    div[role="button"]._amie > div:nth-child(2) /* user/group details at the top of chat panel */,
    div._ahxj /* user name in group chat messages */,
    div._ahz1 /* user name in contact attachment */,
    div.xs83m0k.x1iyjqo2.xdl72j9.x18wx58x.x6ikm8r.x10wlt62 /* user name in multiple contacts attachment */,
    div.overlay ._ak8q /* user name in overlay media view */,
    h2.xngnso2.x1fcty0u.x2b8uid /* user name in details info*/,
    div.x2b8uid.x193iq5w.xqmxbcd /* group name in details info */,
    div.x1evy7pa.x1gslohp /* user phone number in details info*/,
    span.x1lkfr7t.xdbd6k5.x1fcty0u.xw2npq5:nth-child(2) /* user phone number in details info*/,
    div.x1evy7pa.x1kgmq87.x2b8uid /* group short details in details info */,
    div.xlm9qay.x1s688f.x1e56ztr /* business user name in details info */,
    div.xlm9qay.x1s688f.x1e56ztr + div /* business short details in details info */,
    div.x2b8uid > .xzueoph + div /* business category in details info */,
    div.xkhd6sd:not([role]) > ._ajxu > div /* business about in details info */,
    div.xkhd6sd._ajxt > ._ajxu > div /* business phone number details in details info */,
    div._ak1d > div:first-child > div:first-child > :not(:first-child) /* user/group name in starred message list */
    {
      filter: blur(${toggleNameDescriptionBlur}px) grayscale(1);
      transition-delay: 0s;
    }

    /* former wa version (v2.2412.xx) */
    div:not([role]) > div:not([role]) > ._8nE1Y ._21S-L:hover /*user/group name in search message*/,
    div[role="row"] > div > ._8nE1Y ._21S-L:hover /*user/group name in message list*/,
    div[role="button"] > div > ._8nE1Y ._21S-L:hover /*user/group name in non message list*/,
    ._3W2ap:hover /*Top user/group name*/,
    ._2au8k div:nth-child(2):hover /*Top group user preview*/,
    ._2HCBh:hover ._1N-sl ._1mDG- /*Details groupname*/,
    .q9lllk4z:hover /*Details username */,
    .qfejxiq4 .Mk0Bp._30scZ:hover /*Details username business*/,
    .njub1g37 span._11JPr:hover /*Starred messages user/group name*/,
    .a4ywakfo.qt60bha0:hover /*About user phone number*/,
    ._3IzYj:hover /*Message in chat*/,
    .Efdtr:hover /* name in contact attachment */,
    .djhxrpsl:hover /* name in multi contact attachment */,

    /* updated wa version (v2.3000.xx) */
    div[role="listitem"] ._ak8q:hover /* user/group name in message list */,
    div[role="button"][class=""] ._ak8q:hover /* user/group name in details list and popup list */,
    div[role="dialog"] ._ak8q:hover /* user name in contact popup list */,
    div[role="dialog"] div.copyable-text:hover /* phone number and business user name in contact popup list */,
    div[role="listitem"] ._am_2:hover /* community name */,
    div[role="button"]._amie > div:nth-child(1):hover /* user/group name at the top of chat panel */,
    div[role="button"]._amie > div:nth-child(2):hover /* user/group details at the top of chat panel */,
    div._ahxj:hover /* user name in group chat messages */,
    div._ahz1:hover /* user name in contact attachment */,
    div.xs83m0k.x1iyjqo2.xdl72j9.x18wx58x.x6ikm8r.x10wlt62:hover /* user name in multiple contacts attachment */,
    div.overlay ._ak8q:hover /* user name in overlay media view */,
    h2.xngnso2.x1fcty0u.x2b8uid:hover /* user name in details info */,
    div.x2b8uid.x193iq5w.xqmxbcd:hover /* group name in details info */,
    div.x1evy7pa.x1gslohp:hover /* user phone number in details info*/,
    span.x1lkfr7t.xdbd6k5.x1fcty0u.xw2npq5:nth-child(2):hover /* user phone number in details info*/,
    div.x1evy7pa.x1kgmq87.x2b8uid:hover /* group short details in details info */,
    div.xlm9qay.x1s688f.x1e56ztr:hover /* business user name in details info */,
    div.xlm9qay.x1s688f.x1e56ztr + div:hover /* business short details in details info */,
    div.x2b8uid > .xzueoph + div:hover /* business category in details info */,
    div.xkhd6sd:not([role]) > ._ajxu > div:hover /* business about in details info */,
    div.xkhd6sd._ajxt > ._ajxu > div:hover /* business phone number in details info */,
    div._ak1d > div:first-child > div:first-child > :not(:first-child):hover /* user/group name in starred message list */
    {
      filter: blur(0) grayscale(0);
      transition-delay: 0.3s;
    }

    /* updated wa version (v2.3000.xx) */
    /* prevent cropped blur */
    div._ak1d > div:first-child > div:first-child /* user/group name in starred message list */
    {
      overflow: visible;
    }
    `;
    const _toggleNameDescription = (cssRules: string): void => {
        setToggleNameDescription(!toggleNameDescription)
        chrome.tabs.query({active: true, currentWindow: true}, function (tabs: chrome.tabs.Tab[]): void {
            const tab: chrome.tabs.Tab = tabs[0]
            const tabId: number = tabs[0].id!
            console.log("tab:" + JSON.stringify(tab))
            if (!toggleNameDescription) {
                chrome.scripting.executeScript({
                    target: { tabId },
                    func: insertCSSDirectly,
                    args: ["toggleNameDescription", cssRules]
                })
                setCount(count + 1)
            } else {
                chrome.scripting.executeScript({
                    target: { tabId },
                    func: removeCSSDirectly,
                    args: ["toggleNameDescription"]
                })
                setCount(count - 1)
            }
        })
    }
    // toggleNoDelayDescription
    const [toggleNoDelayDescription, setToggleNoDelayDescription] = useState(false)
    const noDelayDescriptionCSS = `
    /* former wa version (v2.2412.xx) */
    /* mediaGallery */
    .tukmaf4q:hover /*media preview in gallery*/,
    ._1Pr6q:hover /*media preview in send media*/,

    /* mediaPreview */
    ._2AOIt div.ktbp76dp div[role="button"]:hover img /*image landscape*/,
    ._2AOIt div.eu4mztcy div[role="button"]:hover img /*image potrait*/,
    ._2AOIt div.ktbp76dp > div[role="button"]:hover /*video landscape*/,
    ._2AOIt div.eu4mztcy > div[role="button"]:hover /*video potrait*/,
    ._2AOIt .cm280p3y > div[role="button"] > div.g0rxnol2.fe3aadhc.g0rxnol2.ln8gz9je:hover /*document image*/,
    ._2AOIt .cm280p3y > div[role="button"] > div > div > div:not(:last-child):hover /*document*/,
    ._2AOIt .M6sU5:hover /*link*/,
    ._1BOF7 ._3cupO > div:not(.LldYr):hover /*link list*/,
    ._3V9pc:hover /* gif */,
    .kknmh:hover /*media reply thumb*/,
    ._2MmTH:hover /*media send preview*/,
    .ZRhsD._2foMf:hover /*Sticker*/,

    /* messages */
    ._2AOIt:hover div:first-child /*normal message*/,
    ._3cupO:hover /*link list message*/,
    ._1qNn2 ._1nCcB:hover /*sticker*/,
    ._1BOF7 ._1sykI:hover /*blue info bar*/,

    /* messagesPreview */
    .vQ0w7:hover /*message preview*/,

    /* name */
    div:not([role]) > div:not([role]) > ._8nE1Y ._21S-L:hover /*user/group name in search message*/,
    div[role="row"] > div > ._8nE1Y ._21S-L:hover /*user/group name in message list*/,
    div[role="button"] > div > ._8nE1Y ._21S-L:hover /*user/group name in non message list*/,
    ._3W2ap:hover /*Top user/group name*/,
    ._2au8k div:nth-child(2):hover /*Top group user preview*/,
    ._2HCBh:hover ._1N-sl ._1mDG- /*Details groupname*/,
    .q9lllk4z:hover /*Details username */,
    .qfejxiq4 .Mk0Bp._30scZ:hover /*Details username business*/,
    .njub1g37 span._11JPr:hover /*Starred messages user/group name*/,
    .a4ywakfo.qt60bha0:hover /*About user phone number*/,
    ._3IzYj:hover /*Message in chat*/,
    .Efdtr:hover /* name in contact attachment */,
    .djhxrpsl:hover /* name in multi contact attachment */,

    /* profilePic */
    [role="row"] > div > ._1AHcd ._13jwn:hover /*profile pic message list*/,
    [role="button"] > div > ._1AHcd ._13jwn:hover /*profile pic non message list*/,
    ._2pr2H:hover /*message view profile pic*/,
    ._3WByx:hover /*self profile pic*/,
    .stnyektq:hover /*group chat msg profile pic*/,
    ._3oha0._2xaO4:hover /* voice message profile pic */,
    ._3dPH0:hover /* contacts attachment */,
    .b021xdil:hover /* multi contacts attachment */,
    .pz0xruzv:hover /*Details direct profile pic*/,
    .njub1g37 ._3xH7K:hover /*Details group profile pic*/,
    .njub1g37 .kk3akd72.claouzo6:hover /*Starred message profile pic*/,

    /* textInput */
    ._3Uu1_:hover /*textarea*/,

    /* updated wa version (v2.3000.xx) */
    /* mediaGallery */
    div._ajuf._ajuh._ajug > div:hover /* media in overlay view */,
    div.x1conndi:hover /* media thumb in overlay view and details panel */,
    div.x4t2iug:hover /* media thumb in media gallery panel */,

    /* mediaPreview */
    div._amk4 > ._amk6 :is(div, button)[role="button"]:not(.x13yyeie, ._ak3u, [data-js-context-icon], .x1a06ls3):hover /* media messages in chat panel (also quoted message and contact attachment button) */,
    div._ak4o:hover /* voice note / audio in chat panel */,
    div._ahy5 > div:hover /* link preview in chat panel */,
    div._ak15 > ._ahwq:hover /* some link preview in link list panel */,
    span._ajxd._ajxk > ._ajxj._ajxd:hover /* sticker in chat panel */,
    div.xz9dduz > div:first-child:hover /* maps / location */,
    div._ajwt > div:first-child > div:nth-child(2) > div:hover /* media preview in send media */,
    div._ak3i:hover /* media preview thumb in send media */,
    div._ajwt .xm0mufa > div:hover /* document filename in send media */,

    /* messages */
    div._amk4 > ._amk6:hover /* normal message text */,
    div._amk4 ._am2s:hover /* sticker message */,

    /* messagesPreview */
    div._ak8k:hover /* message preview */,

    /* name */
    div[role="listitem"] ._ak8q:hover /* user/group name in message list */,
    div[role="button"][class=""] ._ak8q:hover /* user/group name in details list and popup list */,
    div[role="dialog"] ._ak8q:hover /* user name in contact popup list */,
    div[role="dialog"] div.copyable-text:hover /* phone number and business user name in contact popup list */,
    div[role="listitem"] ._am_2:hover /* community name */,
    div[role="button"]._amie > div:nth-child(1):hover /* user/group name at the top of chat panel */,
    div[role="button"]._amie > div:nth-child(2):hover /* user/group details at the top of chat panel */,
    div._ahxj:hover /* user name in group chat messages */,
    div._ahz1:hover /* user name in contact attachment */,
    div.xs83m0k.x1iyjqo2.xdl72j9.x18wx58x.x6ikm8r.x10wlt62:hover /* user name in multiple contacts attachment */,
    div.overlay ._ak8q:hover /* user name in overlay media view */,
    h2.xngnso2.x1fcty0u.x2b8uid:hover /* user name in details info */,
    div.x2b8uid.x193iq5w.xqmxbcd:hover /* group name in details info */,
    div.x1evy7pa.x1gslohp:hover /* user phone number in details info*/,
    span.x1lkfr7t.xdbd6k5.x1fcty0u.xw2npq5:nth-child(2):hover /* user phone number in details info*/,
    div.x1evy7pa.x1kgmq87.x2b8uid:hover /* group short details in details info */,
    div.xlm9qay.x1s688f.x1e56ztr:hover /* business user name in details info */,
    div.xlm9qay.x1s688f.x1e56ztr + div:hover /* business short details in details info */,
    div.x2b8uid > .xzueoph + div:hover /* business category in details info */,
    div.xkhd6sd:not([role]) > ._ajxu > div:hover /* business about in details info */,
    div.xkhd6sd._ajxt > ._ajxu > div:hover /* business phone number in details info */,
    div._ak1d > div:first-child > div:first-child > :not(:first-child):hover /* user/group name in starred message list */,

    /* profilePic */
    div[role="listitem"] ._ak8h:hover /* user/group profile pic in message list */,
    div[role="button"][class=""] ._ak8h:hover /* user/group profile pic in details list and popup list */,
    div[role="dialog"] ._ak8h:hover /* user/group profile pic in details list and popup list */,
    header._amid div[role="button"]:first-child > div:hover /* user/group profile pic at the top of chat panel */,
    div._amk4 > div[role="button"]:hover /* user profile pic in group chat messages */,
    div._ahz2:hover /* user profile pic in contact attachment */,
    div.x2lah0s.x1c4vz4f.xdl72j9.x194xeti:hover /* user profile pic in multiple contact attachment */,
    div._ak4m:hover /* user profile pic in voice note chat */,
    div.overlay ._ak8h:hover /* user profile pic in overlay media view */,
    div.x78zum5.xl56j7k.x1fqp7bg > div[role="button"]:hover /* user profile pic in details panel */,
    div[role="button"][class="x1n2onr6 x14yjl9h xudhj91 x18nykt9 xww2gxu"]:hover /* business profile pic in details panel */,
    div.x10l6tqk.x13vifvy.x17qophe.xh8yej3.xiqx3za.x6ikm8r.x10wlt62.x1knukwh.xihgre1:hover /* business profile banner in details panel */,
    div.x15e7hw7:hover /* business profile banner in catalog list */,
    div._amje:hover /* group profile pic in details panel */,
    div.overlay ._am0k:hover /* user/group profile pic overlay view */,
    div.x1okw0bk.x1w0mnb:hover /* user profile pic in starred message list */,

    /* textInput */
    div._ak1l:hover /* message text input */
    {
      transition-delay: 0.04s !important;
      -webkit-transition-duration: 0s !important;
      -moz-transition-duration: 0s !important;
      -o-transition-duration: 0s !important;
      transition-duration: 0s !important;
    }
    `;
    const _toggleNoDelayDescription = (cssRules: string): void => {
        setToggleNoDelayDescription(!toggleNoDelayDescription)
        chrome.tabs.query({active: true, currentWindow: true}, function (tabs: chrome.tabs.Tab[]): void {
            const tab: chrome.tabs.Tab = tabs[0]
            const tabId: number = tabs[0].id!
            console.log("tab:" + JSON.stringify(tab))
            if (!toggleNoDelayDescription) {
                chrome.scripting.executeScript({
                    target: { tabId },
                    func: insertCSSDirectly,
                    args: ["toggleNoDelayDescription", cssRules]
                })
                setCount(count + 1)
            } else {
                chrome.scripting.executeScript({
                    target: { tabId },
                    func: removeCSSDirectly,
                    args: ["toggleNoDelayDescription"]
                })
                setCount(count - 1)
            }
        })
    }
    // toggleNoDelayDescription
    const [toggleUnblurActiveDescription, setToggleUnblurActiveDescription] = useState(false)
    const unblurActiveDescriptionCSS = `
    /* former wa version (v2.2412.xx) */
    /* mediaGallery */
    body:hover .tukmaf4q /*media preview in gallery*/,
    body:hover ._1Pr6q /*media preview in send media*/,

    /* mediaPreview */
    body:hover ._2AOIt div.ktbp76dp div[role="button"] img /*image landscape*/,
    body:hover ._2AOIt div.eu4mztcy div[role="button"] img /*image potrait*/,
    body:hover ._2AOIt div.ktbp76dp > div[role="button"] /*video landscape*/,
    body:hover ._2AOIt div.eu4mztcy > div[role="button"] /*video potrait*/,
    body:hover ._2AOIt .cm280p3y > div[role="button"] > div.g0rxnol2.fe3aadhc.g0rxnol2.ln8gz9je /*document image*/,
    body:hover ._2AOIt .cm280p3y > div[role="button"] > div > div > div:not(:last-child) /*document*/,
    body:hover ._2AOIt .M6sU5 /*link*/,
    body:hover ._1BOF7 ._3cupO > div:not(.LldYr) /*link list*/,
    body:hover ._3V9pc /* gif */,
    body:hover .kknmh /*media reply thumb*/,
    body:hover ._2MmTH /*media send preview*/,
    body:hover .ZRhsD._2foMf /*Sticker*/,

    /* messages */
    body:hover ._2AOIt div:first-child /*normal message*/,
    body:hover ._3cupO /*link list message*/,
    body:hover ._1qNn2 ._1nCcB /*sticker*/,
    body:hover ._1BOF7 ._1sykI /*blue info bar*/,

    /* messagesPreview */
    body:hover .vQ0w7 /*message preview*/,

    /* name */
    body:hover div:not([role]) > div:not([role]) > ._8nE1Y ._21S-L /*user/group name in search message*/,
    body:hover div[role="row"] > div > ._8nE1Y ._21S-L /*user/group name in message list*/,
    body:hover div[role="button"] > div > ._8nE1Y ._21S-L /*user/group name in non message list*/,
    body:hover ._3W2ap /*Top user/group name*/,
    body:hover ._2au8k div:nth-child(2) /*Top group user preview*/,
    body:hover ._2HCBh ._1N-sl ._1mDG- /*Details groupname*/,
    body:hover .q9lllk4z /*Details username */,
    body:hover .qfejxiq4 .Mk0Bp._30scZ /*Details username business*/,
    body:hover .njub1g37 span._11JPr /*Starred messages user/group name*/,
    body:hover .a4ywakfo.qt60bha0 /*About user phone number*/,
    body:hover ._3IzYj /*Message in chat*/,
    body:hover .Efdtr /* name in contact attachment */,
    body:hover .djhxrpsl /* name in multi contact attachment */,

    /* profilePic */
    body:hover [role="row"] > div > ._1AHcd ._13jwn /*profile pic message list*/,
    body:hover [role="button"] > div > ._1AHcd ._13jwn /*profile pic non message list*/,
    body:hover ._2pr2H /*message view profile pic*/,
    body:hover ._3WByx /*self profile pic*/,
    body:hover .stnyektq /*group chat msg profile pic*/,
    body:hover ._3oha0._2xaO4 /* voice message profile pic */,
    body:hover ._3dPH0 /* contacts attachment */,
    body:hover .b021xdil /* multi contacts attachment */,
    body:hover .pz0xruzv /*Details direct profile pic*/,
    body:hover .njub1g37 ._3xH7K /*Details group profile pic*/,
    body:hover .njub1g37 .kk3akd72.claouzo6 /*Starred message profile pic*/,

    /* updated wa version (v2.3000.xx) */
    /* mediaGallery */
    body:hover div._ajuf._ajuh._ajug > div /* media in overlay view */,
    body:hover div.x1conndi /* media thumb in overlay view and details panel */,
    body:hover div.x4t2iug /* media thumb in media gallery panel */,

    /* mediaPreview */
    body:hover div._amk4 > ._amk6 :is(div, button)[role="button"]:not(.x13yyeie, ._ak3u, [data-js-context-icon], .x1a06ls3) /* media messages in chat panel (also quoted message and contact attachment button) */,
    body:hover div._ak4o /* voice note / audio in chat panel */,
    body:hover div._ahy5 > div /* link preview in chat panel */,
    body:hover div._ak15 > ._ahwq /* some link preview in link list panel */,
    body:hover span._ajxd._ajxk > ._ajxj._ajxd /* sticker in chat panel */,
    body:hover div.xz9dduz > div:first-child /* maps / location */,
    body:hover div._ajwt > div:first-child > div:nth-child(2) > div /* media preview in send media */,
    body:hover div._ak3i /* media preview thumb in send media */,
    body:hover div._ajwt .xm0mufa > div /* document filename in send media */,

    /* messages */
    body:hover div._amk4 > ._amk6 /* normal message text */,
    body:hover div._amk4 ._am2s /* sticker message */,

    /* messagesPreview */
    body:hover div._ak8k /* message preview */,

    /* name */
    body:hover div[role="listitem"] ._ak8q /* user/group name in message list */,
    body:hover div[role="button"][class=""] ._ak8q /* user/group name in details list and popup list */,
    body:hover div[role="dialog"] ._ak8q /* user name in contact popup list */,
    body:hover div[role="dialog"] div.copyable-text /* phone number and business user name in contact popup list */,
    body:hover div[role="listitem"] ._am_2 /* community name */,
    body:hover div[role="button"]._amie > div:nth-child(1) /* user/group name at the top of chat panel */,
    body:hover div[role="button"]._amie > div:nth-child(2) /* user/group details at the top of chat panel */,
    body:hover div._ahxj /* user name in group chat messages */,
    body:hover div._ahz1 /* user name in contact attachment */,
    body:hover div.xs83m0k.x1iyjqo2.xdl72j9.x18wx58x.x6ikm8r.x10wlt62 /* user name in multiple contacts attachment */,
    body:hover div.overlay ._ak8q /* user name in overlay media view */,
    body:hover h2.xngnso2.x1fcty0u.x2b8uid /* user name in details info */,
    body:hover div.x2b8uid.x193iq5w.xqmxbcd /* group name in details info */,
    body:hover div.x1evy7pa.x1gslohp /* user phone number in details info*/,
    body:hover span.x1lkfr7t.xdbd6k5.x1fcty0u.xw2npq5:nth-child(2) /* user phone number in details info*/,
    body:hover div.x1evy7pa.x1kgmq87.x2b8uid /* group short details in details info */,
    body:hover div.xlm9qay.x1s688f.x1e56ztr /* business user name in details info */,
    body:hover div.xlm9qay.x1s688f.x1e56ztr + div /* business short details in details info */,
    body:hover div.x2b8uid > .xzueoph + div /* business category in details info */,
    body:hover div.xkhd6sd:not([role]) > ._ajxu > div /* business about in details info */,
    body:hover div.xkhd6sd._ajxt > ._ajxu > div /* business phone number in details info */,
    body:hover div._ak1d > div:first-child > div:first-child > :not(:first-child) /* user/group name in starred message list */,

    /* profilePic */
    body:hover div[role="listitem"] ._ak8h /* user/group profile pic in message list */,
    body:hover div[role="button"][class=""] ._ak8h /* user/group profile pic in details list and popup list */,
    body:hover div[role="dialog"] ._ak8h /* user/group profile pic in details list and popup list */,
    body:hover header._amid div[role="button"]:first-child > div /* user/group profile pic at the top of chat panel */,
    body:hover div._amk4 > div[role="button"] /* user profile pic in group chat messages */,
    body:hover div._ahz2 /* user profile pic in contact attachment */,
    body:hover div.x2lah0s.x1c4vz4f.xdl72j9.x194xeti /* user profile pic in multiple contact attachment */,
    body:hover div._ak4m /* user profile pic in voice note chat */,
    body:hover div.overlay ._ak8h /* user profile pic in overlay media view */,
    body:hover div.x78zum5.xl56j7k.x1fqp7bg > div[role="button"] /* user profile pic in details panel */,
    body:hover div[role="button"][class="x1n2onr6 x14yjl9h xudhj91 x18nykt9 xww2gxu"] /* business profile pic in details panel */,
    body:hover div.x10l6tqk.x13vifvy.x17qophe.xh8yej3.xiqx3za.x6ikm8r.x10wlt62.x1knukwh.xihgre1 /* business profile banner in details panel */,
    body:hover div.x15e7hw7 /* business profile banner in catalog list */,
    body:hover div._amje /* group profile pic in details panel */,
    body:hover div.overlay ._am0k /* user/group profile pic overlay view */,
    body:hover div.x1okw0bk.x1w0mnb /* user profile pic in starred message list */
    {
      filter: blur(0) grayscale(0);
      transition-delay: 0s;
    }

    /* former wa version (v2.2412.xx) */
    /* textInput */
    body:hover ._3Uu1_ /*textarea*/,

    /* updated wa version (v2.3000.xx) */
    /* textInput */
    div._ak1l:hover /* message text input */
    {
      filter: grayscale(0) opacity(1);
    }

    `;
    const _toggleUnblurActiveDescription = (cssRules: string): void => {
        setToggleUnblurActiveDescription(!toggleUnblurActiveDescription)
        chrome.tabs.query({active: true, currentWindow: true}, function (tabs: chrome.tabs.Tab[]): void {
            const tab: chrome.tabs.Tab = tabs[0]
            const tabId: number = tabs[0].id!
            console.log("tab:" + JSON.stringify(tab))
            if (!toggleUnblurActiveDescription) {
                chrome.scripting.executeScript({
                    target: { tabId },
                    func: insertCSSDirectly,
                    args: ["toggleUnblurActiveDescription", cssRules]
                })
                setCount(count + 1)
            } else {
                chrome.scripting.executeScript({
                    target: { tabId },
                    func: removeCSSDirectly,
                    args: ["toggleUnblurActiveDescription"]
                })
                setCount(count - 1)
            }
        })
    }
    return (
      <>
          currentTab: {JSON.stringify(currentTab)}
          <div id="mainContent">
              <h2 style={{marginTop: '10px', marginBottom: '5px'}}>{t("extensionSettings")}</h2>
              <ul>
                  <li>
                      {t("toggleMessages")}
                      <input type="checkbox" id="messages" data-style="messages"
                             checked={toggleMessages}
                             onChange={(): void => _toggleMessages(messagesCSS)}
                      />
                      <label htmlFor="messages" data-localetitle="toggleMessagesDescription"></label>
                      <div className="collapsible">
                          <form className="var-style">
                              {t("blurInputLabel")}
                              <button type="reset" data-localetitle="resetValue"
                                      onClick={(event): void => setToggleMessagesBlur(3)}>
                                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                                      <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="1.5">
                                          <path stroke-miterlimit="10"
                                                d="M6.395 7.705A7.885 7.885 0 0 1 12 5.382a7.929 7.929 0 0 1 7.929 7.929A7.94 7.94 0 0 1 12 21.25a7.939 7.939 0 0 1-7.929-7.94"/>
                                          <path stroke-linejoin="round"
                                                d="m7.12 2.75l-.95 3.858a1.332 1.332 0 0 0 .97 1.609l3.869.948"/>
                                      </g>
                                  </svg>
                              </button>
                              <input type="number" name="msBlur" id="msBlur" data-var-name="msBlur" value={toggleMessagesBlur}
                                     onChange={(event): void => setToggleMessagesBlur(Number(event.target.value))}
                                     data-localetitle="msBlurInputDescription"/>
                              <span className="unit">px</span>
                              <button type="submit" data-localetitle="msBlurInputDescription">✔</button>
                          </form>
                      </div>
                  </li>
                  <li>
                      {t("toggleMessagesPreview")}
                      <button type="button" className="reveal-btn">
                          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                              <path fill="currentColor"
                                    d="M12 15.5A3.5 3.5 0 0 1 8.5 12A3.5 3.5 0 0 1 12 8.5a3.5 3.5 0 0 1 3.5 3.5a3.5 3.5 0 0 1-3.5 3.5m7.43-2.53c.04-.32.07-.64.07-.97s-.03-.66-.07-1l2.11-1.63c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.31-.61-.22l-2.49 1c-.52-.39-1.06-.73-1.69-.98l-.37-2.65A.506.506 0 0 0 14 2h-4c-.25 0-.46.18-.5.42l-.37 2.65c-.63.25-1.17.59-1.69.98l-2.49-1c-.22-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64L4.57 11c-.04.34-.07.67-.07 1s.03.65.07.97l-2.11 1.66c-.19.15-.25.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1.01c.52.4 1.06.74 1.69.99l.37 2.65c.04.24.25.42.5.42h4c.25 0 .46-.18.5-.42l.37-2.65c.63-.26 1.17-.59 1.69-.99l2.49 1.01c.22.08.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64z"/>
                          </svg>
                      </button>
                      <input type="checkbox" id="messagesPreview" data-style="messagesPreview"
                             checked={toggleMessagesPreview}
                             onChange={(): void => _toggleMessagesPreview(messagesPreviewCSS)}
                      />
                      <label htmlFor="messagesPreview" data-localetitle="toggleMessagesPreviewDescription"></label>
                      <div className="collapsible">
                          <form className="var-style">
                              {t("blurInputLabel")}
                              <button type="reset" data-localetitle="resetValue"
                                      onClick={(event): void => setToggleMessagesPreviewBlur(3)}>
                                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                                      <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="1.5">
                                          <path stroke-miterlimit="10"
                                                d="M6.395 7.705A7.885 7.885 0 0 1 12 5.382a7.929 7.929 0 0 1 7.929 7.929A7.94 7.94 0 0 1 12 21.25a7.939 7.939 0 0 1-7.929-7.94"/>
                                          <path stroke-linejoin="round"
                                                d="m7.12 2.75l-.95 3.858a1.332 1.332 0 0 0 .97 1.609l3.869.948"/>
                                      </g>
                                  </svg>
                              </button>
                              <input type="number" name="mspBlur" id="mspBlur" data-var-name="mspBlur" value={toggleMessagesPreviewBlur}
                                     onChange={(event): void => setToggleMessagesPreviewBlur(Number(event.target.value))}
                                     data-localetitle="mspBlurInputDescription"/>
                              <span className="unit">px</span>
                              <button type="submit" data-localetitle="mspBlurInputDescription">✔</button>
                          </form>
                      </div>
                  </li>
                  <li>
                      {t("toggleMediaPreview")}
                      <button type="button" className="reveal-btn">
                          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                              <path fill="currentColor"
                                    d="M12 15.5A3.5 3.5 0 0 1 8.5 12A3.5 3.5 0 0 1 12 8.5a3.5 3.5 0 0 1 3.5 3.5a3.5 3.5 0 0 1-3.5 3.5m7.43-2.53c.04-.32.07-.64.07-.97s-.03-.66-.07-1l2.11-1.63c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.31-.61-.22l-2.49 1c-.52-.39-1.06-.73-1.69-.98l-.37-2.65A.506.506 0 0 0 14 2h-4c-.25 0-.46.18-.5.42l-.37 2.65c-.63.25-1.17.59-1.69.98l-2.49-1c-.22-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64L4.57 11c-.04.34-.07.67-.07 1s.03.65.07.97l-2.11 1.66c-.19.15-.25.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1.01c.52.4 1.06.74 1.69.99l.37 2.65c.04.24.25.42.5.42h4c.25 0 .46-.18.5-.42l.37-2.65c.63-.26 1.17-.59 1.69-.99l2.49 1.01c.22.08.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64z"/>
                          </svg>
                      </button>
                      <input type="checkbox" id="mediaPreview" data-style="mediaPreview"
                             checked={toggleMediaPreview}
                             onChange={(): void => _toggleMediaPreview(mediaPreviewCSS)}
                      />
                      <label htmlFor="mediaPreview" data-localetitle="toggleMediaPreviewDescription"></label>
                      <div className="collapsible">
                          <form className="var-style">
                              {t("blurInputLabel")}
                              <button type="reset" data-localetitle="resetValue"
                                      onClick={(event): void => setToggleMediaPreviewBlur(3)}>
                                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                                      <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="1.5">
                                          <path stroke-miterlimit="10"
                                                d="M6.395 7.705A7.885 7.885 0 0 1 12 5.382a7.929 7.929 0 0 1 7.929 7.929A7.94 7.94 0 0 1 12 21.25a7.939 7.939 0 0 1-7.929-7.94"/>
                                          <path stroke-linejoin="round"
                                                d="m7.12 2.75l-.95 3.858a1.332 1.332 0 0 0 .97 1.609l3.869.948"/>
                                      </g>
                                  </svg>
                              </button>
                              <input type="number" name="mdpBlur" id="mdpBlur" data-var-name="mdpBlur" value={toggleMediaPreviewBlur}
                                     onChange={(event): void => setToggleMediaPreviewBlur(Number(event.target.value))}
                                     data-localetitle="mdpBlurInputDescription"/>
                              <span className="unit">px</span>
                              <button type="submit" data-localetitle="mdpBlurInputDescription">✔</button>
                          </form>
                      </div>
                  </li>
                  <li>
                      {t("toggleMediaGallery")}
                      <button type="button" className="reveal-btn">
                          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                              <path fill="currentColor"
                                    d="M12 15.5A3.5 3.5 0 0 1 8.5 12A3.5 3.5 0 0 1 12 8.5a3.5 3.5 0 0 1 3.5 3.5a3.5 3.5 0 0 1-3.5 3.5m7.43-2.53c.04-.32.07-.64.07-.97s-.03-.66-.07-1l2.11-1.63c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.31-.61-.22l-2.49 1c-.52-.39-1.06-.73-1.69-.98l-.37-2.65A.506.506 0 0 0 14 2h-4c-.25 0-.46.18-.5.42l-.37 2.65c-.63.25-1.17.59-1.69.98l-2.49-1c-.22-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64L4.57 11c-.04.34-.07.67-.07 1s.03.65.07.97l-2.11 1.66c-.19.15-.25.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1.01c.52.4 1.06.74 1.69.99l.37 2.65c.04.24.25.42.5.42h4c.25 0 .46-.18.5-.42l.37-2.65c.63-.26 1.17-.59 1.69-.99l2.49 1.01c.22.08.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64z"/>
                          </svg>
                      </button>
                      <input type="checkbox" id="mediaGallery" data-style="mediaGallery"
                             checked={toggleMediaGalleryDescription}
                             onChange={(): void => _toggleMediaGalleryDescription(mediaGalleryDescriptionCSS)}
                      />
                      <label htmlFor="mediaGallery" data-localetitle="toggleMediaGalleryDescription"></label>
                      <div className="collapsible">
                          <form className="var-style">
                              {t("blurInputLabel")}
                              <button type="reset" data-localetitle="resetValue"
                                      onClick={(event): void => setToggleMediaGalleryDescriptionBlur(3)}>
                                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                                      <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="1.5">
                                          <path stroke-miterlimit="10"
                                                d="M6.395 7.705A7.885 7.885 0 0 1 12 5.382a7.929 7.929 0 0 1 7.929 7.929A7.94 7.94 0 0 1 12 21.25a7.939 7.939 0 0 1-7.929-7.94"/>
                                          <path stroke-linejoin="round"
                                                d="m7.12 2.75l-.95 3.858a1.332 1.332 0 0 0 .97 1.609l3.869.948"/>
                                      </g>
                                  </svg>
                              </button>
                              <input type="number" name="mdgBlur" id="mdgBlur" data-var-name="mdgBlur" value={toggleMediaGalleryDescriptionBlur}
                                     onChange={(event): void => setToggleMediaGalleryDescriptionBlur(Number(event.target.value))}
                                     data-localetitle="mdgBlurInputDescription"/>
                              <span className="unit">px</span>
                              <button type="submit" data-localetitle="mdgBlurInputDescription">✔</button>
                          </form>
                      </div>
                  </li>
                  <li>
                      {t("toggleTextInput")}
                      <input type="checkbox" id="textInput" data-style="textInput"
                             checked={toggleTextInputDescription}
                             onChange={(): void => _toggleTextInputDescription(textInputDescriptionCSS)}
                      />
                      <label htmlFor="textInput" data-localetitle="toggleTextInputDescription"></label>
                  </li>
                  <li>
                      {t("toggleProfilePic")}
                      <button type="button" className="reveal-btn">
                          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                              <path fill="currentColor"
                                    d="M12 15.5A3.5 3.5 0 0 1 8.5 12A3.5 3.5 0 0 1 12 8.5a3.5 3.5 0 0 1 3.5 3.5a3.5 3.5 0 0 1-3.5 3.5m7.43-2.53c.04-.32.07-.64.07-.97s-.03-.66-.07-1l2.11-1.63c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.31-.61-.22l-2.49 1c-.52-.39-1.06-.73-1.69-.98l-.37-2.65A.506.506 0 0 0 14 2h-4c-.25 0-.46.18-.5.42l-.37 2.65c-.63.25-1.17.59-1.69.98l-2.49-1c-.22-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64L4.57 11c-.04.34-.07.67-.07 1s.03.65.07.97l-2.11 1.66c-.19.15-.25.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1.01c.52.4 1.06.74 1.69.99l.37 2.65c.04.24.25.42.5.42h4c.25 0 .46-.18.5-.42l.37-2.65c.63-.26 1.17-.59 1.69-.99l2.49 1.01c.22.08.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64z"/>
                          </svg>
                      </button>
                      <input type="checkbox" id="profilePic" data-style="profilePic"
                             checked={toggleProfilePicDescription}
                             onChange={(): void => _toggleProfilePicDescription(profilePicDescriptionCSS)}
                      />
                      <label htmlFor="profilePic" data-localetitle="toggleProfilePicDescription"></label>
                      <div className="collapsible">
                          <form className="var-style">
                              {t("ppSmBlurInputLabel")}
                              <button type="reset" data-localetitle="resetValue"
                                      onClick={(event): void => setToggleProfilePicDescriptionSmallBlur(3)}>
                                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                                      <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="1.5">
                                          <path stroke-miterlimit="10"
                                                d="M6.395 7.705A7.885 7.885 0 0 1 12 5.382a7.929 7.929 0 0 1 7.929 7.929A7.94 7.94 0 0 1 12 21.25a7.939 7.939 0 0 1-7.929-7.94"/>
                                          <path stroke-linejoin="round"
                                                d="m7.12 2.75l-.95 3.858a1.332 1.332 0 0 0 .97 1.609l3.869.948"/>
                                      </g>
                                  </svg>
                              </button>
                              <input type="number" name="ppSmBlur" id="ppSmBlur" data-var-name="ppSmBlur" value={toggleProfilePicDescriptionSmallBlur}
                                     onChange={(event): void => setToggleProfilePicDescriptionSmallBlur(Number(event.target.value))}
                                     data-localetitle="ppSmBlurInputDescription"/>
                              <span className="unit">px</span>
                              <button type="submit" data-localetitle="ppSmBlurInputDescription">✔</button>
                          </form>
                          <form className="var-style">
                              {t("ppBlurInputLabel")}
                              <button type="reset" data-localetitle="resetValue"
                                      onClick={(event): void => setToggleProfilePicDescriptionNormalBlur(3)}>
                                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                                      <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="1.5">
                                          <path stroke-miterlimit="10"
                                                d="M6.395 7.705A7.885 7.885 0 0 1 12 5.382a7.929 7.929 0 0 1 7.929 7.929A7.94 7.94 0 0 1 12 21.25a7.939 7.939 0 0 1-7.929-7.94"/>
                                          <path stroke-linejoin="round"
                                                d="m7.12 2.75l-.95 3.858a1.332 1.332 0 0 0 .97 1.609l3.869.948"/>
                                      </g>
                                  </svg>
                              </button>
                              <input type="number" name="ppBlur" id="ppBlur" data-var-name="ppBlur" value={toggleProfilePicDescriptionNormalBlur}
                                     onChange={(event): void => setToggleProfilePicDescriptionNormalBlur(Number(event.target.value))}
                                     data-localetitle="ppBlurInputDescription"/>
                              <span className="unit">px</span>
                              <button type="submit" data-localetitle="ppBlurInputDescription">✔</button>
                          </form>
                          <form className="var-style">
                              {t("ppLgBlurInputLabel")}
                              <button type="reset" data-localetitle="resetValue"
                                      onClick={(event): void => setToggleProfilePicDescriptionLargeBlur(3)}>
                                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                                      <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="1.5">
                                          <path stroke-miterlimit="10"
                                                d="M6.395 7.705A7.885 7.885 0 0 1 12 5.382a7.929 7.929 0 0 1 7.929 7.929A7.94 7.94 0 0 1 12 21.25a7.939 7.939 0 0 1-7.929-7.94"/>
                                          <path stroke-linejoin="round"
                                                d="m7.12 2.75l-.95 3.858a1.332 1.332 0 0 0 .97 1.609l3.869.948"/>
                                      </g>
                                  </svg>
                              </button>
                              <input type="number" name="ppLgBlur" id="ppLgBlur" data-var-name="ppLgBlur" value={toggleProfilePicDescriptionLargeBlur}
                                     onChange={(event): void => setToggleProfilePicDescriptionLargeBlur(Number(event.target.value))}
                                     data-localetitle="ppLgBlurInputDescription"/>
                              <span className="unit">px</span>
                              <button type="submit" data-localetitle="ppLgBlurInputDescription">✔</button>
                          </form>
                      </div>
                  </li>
                  <li>
                      {t("toggleName")}
                      <button type="button" className="reveal-btn">
                          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                              <path fill="currentColor"
                                    d="M12 15.5A3.5 3.5 0 0 1 8.5 12A3.5 3.5 0 0 1 12 8.5a3.5 3.5 0 0 1 3.5 3.5a3.5 3.5 0 0 1-3.5 3.5m7.43-2.53c.04-.32.07-.64.07-.97s-.03-.66-.07-1l2.11-1.63c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.31-.61-.22l-2.49 1c-.52-.39-1.06-.73-1.69-.98l-.37-2.65A.506.506 0 0 0 14 2h-4c-.25 0-.46.18-.5.42l-.37 2.65c-.63.25-1.17.59-1.69.98l-2.49-1c-.22-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64L4.57 11c-.04.34-.07.67-.07 1s.03.65.07.97l-2.11 1.66c-.19.15-.25.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1.01c.52.4 1.06.74 1.69.99l.37 2.65c.04.24.25.42.5.42h4c.25 0 .46-.18.5-.42l.37-2.65c.63-.26 1.17-.59 1.69-.99l2.49 1.01c.22.08.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64z"/>
                          </svg>
                      </button>
                      <input type="checkbox" id="name" data-style="name"
                             checked={toggleNameDescription}
                             onChange={(): void => _toggleNameDescription(nameDescriptionCSS)}
                      />
                      <label htmlFor="name" data-localetitle="toggleNameDescription"></label>
                      <div className="collapsible">
                          <form className="var-style">
                              {t("blurInputLabel")}
                              <button type="reset" data-localetitle="resetValue"
                                      onClick={(event): void => setToggleNameDescriptionBlur(3)}>
                                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                                      <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="1.5">
                                          <path stroke-miterlimit="10"
                                                d="M6.395 7.705A7.885 7.885 0 0 1 12 5.382a7.929 7.929 0 0 1 7.929 7.929A7.94 7.94 0 0 1 12 21.25a7.939 7.939 0 0 1-7.929-7.94"/>
                                          <path stroke-linejoin="round"
                                                d="m7.12 2.75l-.95 3.858a1.332 1.332 0 0 0 .97 1.609l3.869.948"/>
                                      </g>
                                  </svg>
                              </button>
                              <input type="number" name="nmBlur" id="nmBlur" data-var-name="nmBlur" value={toggleNameDescriptionBlur}
                                     onChange={(event): void => setToggleNameDescriptionBlur(Number(event.target.value))}
                                     data-localetitle="nmBlurInputDescription"/>
                              <span className="unit">px</span>
                              <button type="submit" data-localetitle="nmBlurInputDescription">✔</button>
                          </form>
                      </div>
                  </li>
                  <li>
                      {t("toggleNoDelay")}
                      <input type="checkbox" id="noDelay" data-style="noDelay"
                             checked={toggleNoDelayDescription}
                             onChange={(): void => _toggleNoDelayDescription(noDelayDescriptionCSS)}
                      />
                      <label htmlFor="noDelay" data-localetitle="toggleNoDelayDescription"></label>
                  </li>
                  <li>
                      {t("toggleUnblurActive")}
                      <input type="checkbox" id="unblurActive" data-style="unblurActive"
                             checked={toggleUnblurActiveDescription}
                             onChange={(): void => _toggleUnblurActiveDescription(unblurActiveDescriptionCSS)}
                      />
                      <label htmlFor="unblurActive" data-localetitle="toggleUnblurActiveDescription"></label>
                  </li>
              </ul>
          </div>
      </>
    )
}
const root = createRoot(document.getElementById("root")!)
root.render(
    <React.StrictMode>
        <Popup/>
    </React.StrictMode>
)
